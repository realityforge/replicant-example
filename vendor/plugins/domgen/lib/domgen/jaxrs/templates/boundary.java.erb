/* DO NOT EDIT: File is auto-generated */
package <%= to_package(service.jaxrs.qualified_boundary_name) %>;

@javax.annotation.Generated( "Domgen" )
@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@javax.ejb.TransactionAttribute( javax.ejb.TransactionAttributeType.NEVER )
@javax.ejb.Startup
@javax.ejb.Singleton( name = <%= service.jaxrs.boundary_name %>.EJB_NAME )
@javax.ejb.ConcurrencyManagement( javax.ejb.ConcurrencyManagementType.BEAN )
public class <%= service.jaxrs.boundary_name %>
<%= service.jaxrs.boundary_extends ? "  extends #{service.jaxrs.boundary_extends}" : "" %>
  implements <%= service.jaxrs.qualified_service_name %>
{
  public static final String EJB_NAME = "<%= service.jaxrs.service_name %>";

  @javax.ejb.EJB
  private <%= service.ejb.qualified_boundary_interface_name %> _service;

<% service.methods.select{|method| method.jaxrs?}.each do |method|
%>
  public <%= annotated_type(method.return_value, :jaxrs, :boundary) %> <%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect{|p| "#{annotated_type(p, :jaxrs, :boundary)} #{Domgen::Naming.camelize(p.name)}" }.join(", ") %>)<%=
    exceptions = method.exceptions.collect{|e| e.ee.qualified_name}
    exceptions.empty? ? "" : "\n    throws #{exceptions.join(', ')}"
%>
  {
    <%= method.return_value.return_type != :void ? 'return ' : '' %>_service.<%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect{|p| Domgen::Naming.camelize(p.name) }.join(", ") %>);
  }

<% end %>}
