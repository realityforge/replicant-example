/* DO NOT EDIT: File is auto-generated */
package <%= service.data_module.ejb.service_package %>;

@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@javax.jws.WebService( targetNamespace = <%= service.jws.java_service_name %>.NAMESPACE, wsdlLocation = <%= service.jws.java_service_name %>.WSDL_LOCATION )
@javax.jws.soap.SOAPBinding( style = javax.jws.soap.SOAPBinding.Style.DOCUMENT,
                             use = javax.jws.soap.SOAPBinding.Use.LITERAL,
                             parameterStyle = javax.jws.soap.SOAPBinding.ParameterStyle.WRAPPED )
@com.sun.xml.ws.developer.SchemaValidation
public interface <%= service.jws.java_service_name %>
{
  String NAMESPACE = "<%= service.jws.namespace %>";
  String WSDL_LOCATION = "<%= service.jws.system_id %>";
  String ENDPOINT_INTERFACE = "<%= service.jws.qualified_java_service_name %>";
  String PORT_NAME = "<%= service.jws.port_name %>";
  String SERVICE_NAME = "<%= service.jws.service_name %>";
  String WEB_SERVICE_NAME = "<%= service.jws.web_service_name %>";

<% service.methods.each do |method|
%>  @javax.jws.WebMethod( operationName = "<%= method.name %>" )
  <%= annotated_type(method.return_value, :jws, :boundary) %> <%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect{|p| "@javax.jws.WebParam( name = \"#{p.name}\", mode = javax.jws.WebParam.Mode.IN, header = false ) #{annotated_type(p, :jws, :boundary)} #{p.name}" }.join(', ') %>)<%=
    method.exceptions.empty? ? '' : "\n    throws #{method.exceptions.collect{|e| e.jws.qualified_name}.join(', ')}"
%>;

<% end %>}
