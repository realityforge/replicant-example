/* DO NOT EDIT: File is auto-generated */
package <%= service.data_module.ejb.service_package %>;

@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@javax.jws.WebService( name= <%= service.jws.java_service_name %>.WEB_SERVICE_NAME, serviceName = <%= service.jws.java_service_name %>.SERVICE_NAME, portName = <%= service.jws.java_service_name %>.PORT_NAME, targetNamespace = <%= service.jws.java_service_name %>.NAMESPACE, endpointInterface = <%= service.jws.java_service_name %>.ENDPOINT_INTERFACE )
@com.sun.xml.ws.developer.SchemaValidation
public class <%= service.jws.boundary_implementation_name %>
  implements <%= service.jws.java_service_name %>
{
  @javax.ejb.EJB
  private <%= service.ejb.qualified_boundary_interface_name %> _service;

<% service.methods.each do |method|
%>  public <%= annotated_type(method.return_value, :jws, :boundary) %> <%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect{|p| "final #{annotated_type(p, :jws, :boundary)} #{p.name}" }.join(', ') %>)<%=
    method.exceptions.empty? ? '' : "\n    throws #{method.exceptions.collect{|e| e.jws.qualified_name}.join(', ')}"
%><%
  return_prefix = method.return_value.return_type == :void ? '' : 'return '
%>
  {
<% if method.exceptions.size > 0 -%>
    try
    {
<% end -%>
    <%= return_prefix  %>_service.<%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect {|parameter| parameter.name }.join(', ') %>);
<% if method.exceptions.size > 0 -%>
    }
<% method.exceptions.each do |exception| -%>
    catch ( final <%= exception.ee.qualified_name %> e )
    {
      throw new <%= exception.jws.qualified_name %>( e.getMessage(), new <%= exception.jws.qualified_fault_info_name %>( <%= (exception.inherited_parameters + exception.parameters).collect{|p| "e.#{getter_prefix(p)}#{p.name}()"}.join(', ') %> ), e );
    }
<% end -%>
<% end -%>
  }

<% end %>}
