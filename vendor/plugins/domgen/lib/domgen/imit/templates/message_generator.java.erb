/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.imit.qualified_message_generator_name) %>;

import org.realityforge.replicant.server.EntityMessage;

/**
 * * Utility class that encodes RPC payloads from JPA entities for the repository "<%= repository.name %>".
 */
@javax.annotation.Generated( "Domgen" )
@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@javax.enterprise.context.ApplicationScoped
public class <%= repository.imit.message_generator_name %>
  implements org.realityforge.replicant.server.EntityMessageGenerator
{
  private final <%= repository.imit.qualified_router_interface_name %> _router;

  @javax.inject.Inject
  public <%= repository.imit.message_generator_name %>( final <%= repository.imit.qualified_router_interface_name %> router )
  {
    _router = router;
  }

  public EntityMessage convertToEntityMessage( final Object object, final boolean isUpdate )
  {
    <%
repository.data_modules.select { |data_module| data_module.imit? }.each do |data_module|
  data_module.entities.each do |entity|
    if entity.imit? && !entity.abstract?
%>if( <%= entity.jpa.qualified_name %>.class.isInstance( object ) )
    {
      final <%= entity.jpa.qualified_name %> entity = <%= entity.jpa.qualified_name %>.class.cast( object );
      final @javax.annotation.Nonnull java.io.Serializable id = entity.<%= getter_for(entity.primary_key) %>;
      final @javax.annotation.Nonnull java.util.Map<String, java.io.Serializable> attributes = isUpdate ? <%= entity.data_module.repository.imit.qualified_jpa_encoder_name %>.encode<%= entity.name %>( entity ) : null;
      final int transportID = <%= repository.imit.message_constants_name %>.<%= Domgen::Naming.uppercase_constantize(entity.data_module.name.to_s) %>_<%= Domgen::Naming.uppercase_constantize(entity.name.to_s) %>;
      final @javax.annotation.Nonnull java.util.Map<String, java.io.Serializable> routingKeys = _router.route<%= entity.name %>( entity );
      return new EntityMessage( id, transportID, System.currentTimeMillis(), routingKeys, attributes );
    }
    else <%
    end
  end
end
%>
    {
      return null;
    }
  }
}
