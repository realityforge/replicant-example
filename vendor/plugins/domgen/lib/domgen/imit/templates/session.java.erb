/* DO NOT EDIT: File is auto-generated */
package <%= repository.imit.encoder_package %>;

@javax.annotation.Generated( "Domgen" )
public class <%= repository.imit.session_name %>
  extends org.realityforge.replicant.server.transport.ReplicantSession
{
<%
  repository.imit.graphs.each do |graph|
    if graph.instance_root?
      entity = repository.data_modules[0].entity_by_name(graph.instance_root)
%>
  private final java.util.HashSet<<%= entity.primary_key.jpa.non_primitive_java_type %>> _interestedIn<%= graph.name %> = new java.util.HashSet<<%= entity.primary_key.jpa.non_primitive_java_type %>>();
<% else -%>
  private boolean _interestedIn<%= graph.name %>;
<%
    end
  end
%>
  public <%= repository.imit.session_name %>( @javax.annotation.Nonnull final String sessionID )
  {
    super( sessionID );
  }

<%
  repository.imit.graphs.each do |graph|
    if graph.instance_root?
      entity = repository.data_modules[0].entity_by_name(graph.instance_root)
%>
  public java.util.Set<Integer> getInterestedIn<%= graph.name %>()
  {
    return java.util.Collections.unmodifiableSet( _interestedIn<%= graph.name %> );
  }

  public final void registerInterestIn<%= graph.name %>( final <%= entity.primary_key.jpa.primitive_java_type %> id )
  {
    _interestedIn<%= graph.name %>.add( id );
  }

  public final void deregisterInterestIn<%= graph.name %>( final <%= entity.primary_key.jpa.primitive_java_type %> id )
  {
    _interestedIn<%= graph.name %>.remove( id );
  }

  public final boolean is<%= graph.name %>Interesting( final <%= entity.primary_key.jpa.primitive_java_type %> id )
  {
    return _interestedIn<%= graph.name %>.contains( id );
  }
<% else -%>
  public final boolean isInterestedIn<%= graph.name %>()
  {
    return _interestedIn<%= graph.name %>;
  }

  public final void setInterestedIn<%= graph.name %>( final boolean v )
  {
    _interestedIn<%= graph.name %> = v;
  }
<%
    end
  end
%>
}
