/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.ejb.qualified_abstract_service_test_name) %>;

@java.lang.SuppressWarnings( { "UnusedDeclaration" } )
@javax.annotation.Generated( "Domgen" )
public abstract class <%= repository.ejb.abstract_service_test_name %>
  extends <%= repository.jpa? ? repository.jpa.qualified_base_entity_test_name : 'org.realityforge.guiceyloops.server.AbstractServerTest' %>
{
<%
  # TODO - there should be a better way of doing this. Perhaps Runnables/Actions that are added by facets?
  if repository.imit?
-%>
  @org.testng.annotations.BeforeMethod
  @java.lang.Override
  public void preTest()
    throws Exception
  {
    super.preTest();
    s( javax.transaction.TransactionSynchronizationRegistry.class ).putResource( org.realityforge.replicant.shared.transport.ReplicantContext.REPLICATION_INVOCATION_KEY, "Test" );
  }

<% end -%>
  @javax.annotation.Nullable
  protected com.google.inject.Module new<%= repository.name %>ServicesModule()
  {
    return new <%= repository.ejb.qualified_services_module_name %>( this );
  }

  @java.lang.Override
  protected com.google.inject.Module[] getModules()
  {
    final java.util.ArrayList<com.google.inject.Module> modules = new java.util.ArrayList<>();
    java.util.Collections.addAll( modules, super.getModules() );
<% repository.ejb.extra_test_modules.each do |test_module| -%>
    modules.add( new <%= test_module %>() );
<% end -%>
    addModule( modules, new<%= repository.name %>ServicesModule() );
    return modules.toArray( new com.google.inject.Module[ modules.size() ] );
  }
}
