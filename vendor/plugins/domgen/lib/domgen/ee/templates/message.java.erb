/* DO NOT EDIT: File is auto-generated */
package <%= to_package(message.ee.qualified_name) %>;

@javax.annotation.Generated( "Domgen" )
@edu.umd.cs.findbugs.annotations.SuppressFBWarnings({"EI_EXPOSE_REP", "EI_EXPOSE_REP2", "DLS_DEAD_LOCAL_STORE"})
@java.lang.SuppressWarnings( { "UnusedDeclaration", "JavaDoc", "PMD.UselessParentheses" } )
public class <%= message.ee.name %>
  implements java.io.Serializable
{
  private static final long serialVersionUID = 1;

<% message.parameters.each do |parameter| -%>
  <%= annotated_type(parameter, :ee, :default, :private => true) %> <%= Domgen::Naming.camelize(parameter.name) %>;
<% end -%>

<% if message.parameters.size != 0 %>
  /**
   * This constructor is present for deserialization mechanisms and should not be called directly.
   *
   * @deprecated
   */
  @java.lang.Deprecated
  @edu.umd.cs.findbugs.annotations.SuppressFBWarnings({"NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR"})
  public <%= message.name %>()
  {
  }
<% end %>

  public <%= message.name %>( <%= message.parameters.collect {|parameter| "#{annotated_type(parameter, :ee, :default, :final => true)} #{Domgen::Naming.camelize(parameter.name)}" }.join(", ") %> )
  {
<% message.parameters.each do |parameter|
     null_protection = parameter.nullable? ? "#{Domgen::Naming.camelize(parameter.name)} == null ? null : " : ""
     if :sequence == parameter.collection_type
%>    this.<%= Domgen::Naming.camelize(parameter.name) %> = <%= null_protection %>java.util.Collections.unmodifiableList( new java.util.ArrayList<<%= parameter.ee.java_component_type %>>( <%= Domgen::Naming.camelize(parameter.name) %> ) );
<%     elsif :set == parameter.collection_type
%>    this.<%= Domgen::Naming.camelize(parameter.name) %> = <%= null_protection %>java.util.Collections.unmodifiableSet( new java.util.HashSet<<%= parameter.ee.java_component_type %>>( <%= Domgen::Naming.camelize(parameter.name) %> ) );
  <%     else
%>    this.<%= Domgen::Naming.camelize(parameter.name) %> = <%= Domgen::Naming.camelize(parameter.name) %>;
<%   end
   end
%>  }
<% message.parameters.each do |parameter|
%>
  <%= annotated_type(parameter, :ee, :default, :public => true, :final => true) %> <%= getter_prefix(parameter) %><%= parameter.name %>()
  {
    return <%= Domgen::Naming.camelize(parameter.name) %>;
  }
<% end
%>

  @java.lang.Override
  public boolean equals( final Object o )
  {
    if ( this == o )
    {
      return true;
    }
    if ( o == null || getClass() != o.getClass() )
    {
      return false;
    }

    final <%= message.ee.name %> that = (<%= message.ee.name %>) o;
<% message.parameters.select{|f|!f.collection?}.each do |parameter| -%>
    if ( <%= parameter.ee.primitive?(:default) ? "#{Domgen::Naming.camelize(parameter.name)} != that.#{Domgen::Naming.camelize(parameter.name)}" : "#{parameter.nullable? ? "null == #{Domgen::Naming.camelize(parameter.name)} ? null != that.#{Domgen::Naming.camelize(parameter.name)} : " : ''}!#{Domgen::Naming.camelize(parameter.name)}.equals( that.#{Domgen::Naming.camelize(parameter.name)} )" %> )
    {
      return false;
    }
<% end -%>
<% message.parameters.select{|f|f.collection?}.each do |parameter| -%>
<% if parameter.nullable? -%>
    if ( (null ==  <%= Domgen::Naming.camelize(parameter.name) %> && null !=  that.<%= Domgen::Naming.camelize(parameter.name) %>) || (null !=  <%= Domgen::Naming.camelize(parameter.name) %> && null ==  that.<%= Domgen::Naming.camelize(parameter.name) %>) )
    {
      return false;
    }
    else if ( null != <%= Domgen::Naming.camelize(parameter.name) %> )
<% end -%>
    {
      if ( <%= Domgen::Naming.camelize(parameter.name) %>.size() != that.<%= Domgen::Naming.camelize(parameter.name) %>.size() )
      {
        return false;
      }
      for ( final <%= parameter.ee.java_component_type %> v : <%= Domgen::Naming.camelize(parameter.name) %> )
      {
        if ( !that.<%= Domgen::Naming.camelize(parameter.name) %>.contains( v ) )
        {
          return false;
        }
      }
    }
<% end -%>
    return true;
  }

  @java.lang.Override
  public int hashCode()
  {
    int result = 0;
<% message.parameters.each do |parameter| -%>
    result = 31 * result + (<%= parameter.ee.primitive?(:default) ? (parameter.boolean? ? "#{Domgen::Naming.camelize(parameter.name)} ? 1 : 0": parameter.real? ? "Float.floatToIntBits(#{Domgen::Naming.camelize(parameter.name)})" : parameter.long? ? "(int)(#{Domgen::Naming.camelize(parameter.name)})" : Domgen::Naming.camelize(parameter.name)) : "#{parameter.nullable? ? "null == #{Domgen::Naming.camelize(parameter.name)} ? 0 : " : ''}#{Domgen::Naming.camelize(parameter.name)}.hashCode()" %>);
<% end -%>
    return result;
  }
}
