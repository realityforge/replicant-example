/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.imit.qualified_system_metadata_name) %>;

@javax.annotation.Generated( "Domgen" )
public final class <%= repository.imit.system_metadata_name %>
{
<% repository.imit.graphs.each do |graph| -%>
  private static final org.realityforge.replicant.server.transport.ChannelMetaData <%= Reality::Naming.uppercase_constantize(graph.name) %> = new org.realityforge.replicant.server.transport.ChannelMetaData( <%= repository.imit.qualified_graph_enum_name %>.<%= Reality::Naming.uppercase_constantize(graph.name) %>.ordinal(), "<%= graph.name %>", <%= graph.instance_root? ? "#{repository.entity_by_name(graph.instance_root).primary_key.jpa.non_primitive_java_type}.class" : 'null' %>, org.realityforge.replicant.server.transport.ChannelMetaData.FilterType.<%= graph.filter_parameter.nil? ? 'NONE' : graph.filter_parameter.immutable? ? 'STATIC' : 'DYNAMIC' %>, <%= graph.filter_parameter.nil? ? 'null' : "#{Domgen::Java.non_primitive_java_type(graph.filter_parameter, :ee, :default)}.class" %>, <%= graph.cacheable? %> );
<% end -%>
  private static final org.realityforge.replicant.server.transport.SystemMetaData $SystemMetaData$ = new org.realityforge.replicant.server.transport.SystemMetaData( "<%= repository.name %>", <%= repository.imit.graphs.collect{|graph| Reality::Naming.uppercase_constantize(graph.name) }.join(', ') %> );

  private <%= repository.imit.system_metadata_name %>()
  {
  }

  public static org.realityforge.replicant.server.transport.SystemMetaData getSystemMetaData()
  {
    return $SystemMetaData$;
  }
}
