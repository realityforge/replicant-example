/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.imit.qualified_poll_rest_service_name) %>;

@javax.annotation.Generated( "Domgen" )
@javax.ws.rs.Path( org.realityforge.replicant.shared.transport.ReplicantContext.REPLICANT_URL_FRAGMENT )
@javax.ws.rs.Produces( javax.ws.rs.core.MediaType.APPLICATION_JSON )
@javax.enterprise.context.ApplicationScoped
@javax.transaction.Transactional( javax.transaction.Transactional.TxType.NOT_SUPPORTED )
public class <%= repository.imit.poll_rest_service_name %>
  extends org.realityforge.replicant.server.ee.rest.AbstractReplicantPollResource
{
  @javax.inject.Inject
  private <%= repository.imit.qualified_poll_service_name %> _pollService;
  @javax.inject.Inject
  private org.realityforge.replicant.server.transport.ReplicantSessionManager _sessionManager;
  @javax.annotation.Resource( lookup = "<%= repository.imit.executor_service_jndi %>" )
  private javax.enterprise.concurrent.ManagedScheduledExecutorService _executorService;
  @javax.annotation.Resource( lookup = "<%= repository.imit.context_service_jndi %>" )
  private javax.enterprise.concurrent.ContextService _contextService;

  @javax.annotation.Nonnull
  @java.lang.Override
  protected javax.enterprise.concurrent.ManagedScheduledExecutorService getScheduledExecutorService()
  {
    return _executorService;
  }

  @javax.annotation.Nonnull
  @java.lang.Override
  protected javax.enterprise.concurrent.ContextService getContextService()
  {
    return _contextService;
  }

  @javax.annotation.Nullable
  @java.lang.Override
  protected String poll( @javax.annotation.Nonnull final String sessionID, final int rxSequence )
    throws Exception
  {
    return _pollService.poll( sessionID, rxSequence );
  }

  @java.lang.Override
  protected boolean isSessionConnected( @javax.annotation.Nonnull final String sessionID )
  {
    return null != _sessionManager.getSession( sessionID );
  }

  @java.lang.Override
  @javax.annotation.PostConstruct
  public void postConstruct()
  {
    super.postConstruct();
  }
}
