/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.imit.qualified_graph_encoder_name) %>;

/**
 * Interface for class that encodes a graph of entities as a set of messages for "<%= repository.name %>" repository.
 */
@javax.annotation.Generated( "Domgen" )
public interface <%= repository.imit.graph_encoder_name %>
{
<%
  repository.imit.graphs.select{|graph| graph.instance_root? }.each do |graph|
    entity = repository.entity_by_name(graph.instance_root)
    p = graph.filter_parameter
-%>
  void encode<%= graph.name %>( @javax.annotation.Nonnull org.realityforge.replicant.server.EntityMessageSet messages, @javax.annotation.Nonnull <%= entity.jpa.qualified_name %> object<%= p.nil? ? '' : ", #{nullability_annotation(p.nullable?)} #{Domgen::Java.java_type(p, :ee, :default)} filter" %> );

<% end -%>
<%
  repository.data_modules.select {|dm| dm.imit?}.each do |data_module|
    data_module.entities.select {|e| e.imit? && !e.imit.subgraph_roots.empty?}.each do |entity|
      entity.imit.subgraph_roots.each do |subgraph_root|
        graph = repository.imit.graph_by_name(subgraph_root)
        p = graph.filter_parameter
-%>
  void encode<%= graph.name %><%= entity.name %>SubGraph( @javax.annotation.Nonnull org.realityforge.replicant.server.EntityMessageSet messages, @javax.annotation.Nonnull <%= entity.jpa.qualified_name %> object<%= p.nil? ? '' : ", #{nullability_annotation(p.nullable?)} #{Domgen::Java.java_type(p, :ee, :default)} filter" %> );

<%
      end
    end
  end
-%>
  /**
   * Helper method useful when manually creating bulk loads.
   */
  void encodeObjects( @javax.annotation.Nonnull org.realityforge.replicant.server.EntityMessageSet messages, @javax.annotation.Nonnull java.util.List<?> objects );
}
