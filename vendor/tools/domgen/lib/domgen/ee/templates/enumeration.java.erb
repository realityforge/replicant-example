/* DO NOT EDIT: File is auto-generated */
package <%= to_package(enumeration.ee.qualified_name) %>;

@javax.annotation.Generated( "Domgen" )
@java.lang.SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
<% if enumeration.jaxb?
%>@javax.xml.bind.annotation.XmlType( name = "<%= enumeration.name %>Type"<%= namespace_annotation_parameter(enumeration.xml) %> )
@javax.xml.bind.annotation.XmlEnum( <% if enumeration.numeric_values? %>java.lang.Integer.class<% else %>java.lang.String.class<% end %> )
<% if enumeration.top_level?
%>@javax.xml.bind.annotation.XmlRootElement( name = "<%= enumeration.xml.name %>"<%= namespace_annotation_parameter(enumeration.xml) %> )
<% end -%>
<% end -%>
public enum <%= enumeration.ee.name %>
{
  <%=
  index = 0
  enumeration.values.collect do |k|
   prefix = enumeration.jaxb? ? "@javax.xml.bind.annotation.XmlEnumValue( \"#{enumeration.numeric_values? ? index : k.name}\" ) " : ''
   index = index + 1
  "#{prefix}#{k.name}"
  end.join(",\n  ") %>;

<% if enumeration.jackson? && enumeration.numeric_values? -%>
  @com.fasterxml.jackson.annotation.JsonValue
  public int value()
  {
    return super.ordinal();
  }

  @edu.umd.cs.findbugs.annotations.SuppressFBWarnings( { "SIC_INNER_SHOULD_BE_STATIC" } )
  @java.lang.SuppressWarnings( { "PMD.UnusedModifier" } )
  // Needs to be public static as jackson was unable to instantiate if not
  public static class Deserializer
    extends com.fasterxml.jackson.databind.JsonDeserializer<<%= enumeration.ee.name %>>
  {
    @java.lang.Override
    public <%= enumeration.ee.name %> deserialize( final com.fasterxml.jackson.core.JsonParser parser, final com.fasterxml.jackson.databind.DeserializationContext context )
      throws java.io.IOException
    {
      final int typeCode = parser.getValueAsInt();
      for( final <%= enumeration.ee.name %> c: <%= enumeration.ee.name %>.values() )
      {
        if( c.ordinal() == typeCode )
        {
          return c;
        }
      }
      throw new java.io.IOException( "Invalid <%= enumeration.ee.name %> type code: " + typeCode );
    }
  }

<% end -%>
<% if enumeration.jpa? && enumeration.jpa.requires_converter? -%>
  @javax.persistence.Converter
  public static class Converter
    implements javax.persistence.AttributeConverter<<%= enumeration.ee.name %>, java.lang.String>
  {
    @java.lang.Override
    public <%= enumeration.ee.name %> convertToEntityAttribute( final java.lang.String data )
    {
      if ( null == data )
      {
        return null;
      }
<% enumeration.values.each do |enum_value| -%>
      else if ( "<%= enum_value.value %>".equals( data ) )
      {
        return <%= enumeration.ee.name %>.<%= enum_value.name %>;
      }
<% end -%>
      else
      {
        throw new java.lang.IllegalStateException();
      }
    }

    @java.lang.Override
    public java.lang.String convertToDatabaseColumn( final <%= enumeration.ee.name %> value )
    {
      if ( null == value )
      {
        return null;
      }
<% enumeration.values.each do |enum_value| -%>
      else if ( <%= enumeration.ee.name %>.<%= enum_value.name %>.equals( value ) )
      {
        return "<%= enum_value.value %>";
      }
<% end -%>
      else
      {
        throw new java.lang.IllegalStateException();
      }
    }
  }
<% end -%>
}
