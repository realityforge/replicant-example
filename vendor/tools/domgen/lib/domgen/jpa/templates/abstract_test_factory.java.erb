/* DO NOT EDIT: File is auto-generated */
package <%= to_package(data_module.jpa.qualified_abstract_test_factory_name) %>;

@javax.annotation.Generated( "Domgen" )
@java.lang.SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
public abstract class <%= data_module.jpa.abstract_test_factory_name %>
{
  private final com.google.inject.Injector _injector;

  protected <%= data_module.jpa.abstract_test_factory_name %>( @javax.annotation.Nonnull final com.google.inject.Injector injector )
  {
    _injector = injector;
  }
<% if data_module.repository.jpa.include_default_unit? -%>

  @javax.annotation.Nonnull
  protected final javax.persistence.EntityManager em()
  {
    return getInjector().getInstance( com.google.inject.Key.get( javax.persistence.EntityManager.class, com.google.inject.name.Names.named( <%= data_module.repository.jpa.qualified_unit_descriptor_name %>.NAME ) ) );
  }
<% end -%>

<% data_module.repository.data_modules.select{|dm|dm.jpa? && dm.jpa.generate_test_factory? && dm.name != data_module.name}.each do |dm| -%>

  protected final <%= dm.jpa.qualified_test_factory_name %> <%= Reality::Naming.camelize(dm.name) %>()
  {
    return s( <%= dm.jpa.qualified_test_factory_name %>.class );
  }

<% end -%>
<% data_module.entities.select{|e|e.jpa?}.each do |entity| -%>
<% if entity.concrete? -%>
<% entity.jpa.create_defaults.each do |defaults| -%>
  @javax.annotation.Nonnull
  public final <%= entity.jpa.qualified_name %> create<%= entity.name %>( <%= entity.attributes.select{|a| !a.generated_value? && a.jpa? && a.jpa.persistent? && !defaults.has_attribute?(a.name) }.collect{|a| "#{annotated_type(a, :jpa, :default, :final => true)} #{Reality::Naming.camelize(a.name)}"}.join(', ') %>)
  {
    return <%= Reality::Naming.camelize(entity.dao.jpa.dao_service_name) %>().create( <%= entity.attributes.select{|a|!a.generated_value? && a.jpa? && a.jpa.persistent?}.collect {|a| defaults.has_attribute?(a.name) ? defaults.value_for(a.name) : Reality::Naming.camelize(a.name) }.join(', ') %> );
  }

<% end -%>
<% entity.jpa.test_create_defaults.each do |defaults| -%>
  @javax.annotation.Nonnull
  public final <%= entity.jpa.qualified_name %> create<%= entity.name %>( <%= entity.attributes.select{|a| !a.generated_value? && a.jpa? && a.jpa.persistent? && !defaults.has_attribute?(a.name) }.collect{|a| "#{annotated_type(a, :jpa, :default, :final => true)} #{Reality::Naming.camelize(a.name)}"}.join(', ') %>)
  {
    return create<%= entity.name %>( <%= entity.attributes.select{|a|!a.generated_value? && a.jpa? && a.jpa.persistent?}.collect {|a| defaults.has_attribute?(a.name) ? defaults.value_for(a.name) : Reality::Naming.camelize(a.name) }.join(', ') %> );
  }

<% end -%>
  @javax.annotation.Nonnull
  public final <%= entity.jpa.qualified_name %> create<%= entity.name %>( <%= entity.attributes.select{|a| !a.generated_value? && a.jpa? && a.jpa.persistent?}.collect{|a| "#{annotated_type(a, :jpa, :default, :final => true)} #{Reality::Naming.camelize(a.name)}"}.join(', ') %> )
  {
    return <%= Reality::Naming.camelize(entity.dao.jpa.dao_service_name) %>().create( <%= entity.attributes.select{|a| !a.generated_value? && a.jpa? && a.jpa.persistent?}.collect{|a| Reality::Naming.camelize(a.name)}.join(', ') %> );
  }
<% if entity.attributes.any?{|a| !a.immutable? && !a.generated_value? && a.jpa? && a.jpa.persistent?} -%>
<% entity.jpa.update_defaults.each do |defaults|
    attr = entity.attributes.select{|a| !a.immutable? && !a.generated_value? && a.jpa? && a.jpa.persistent? && (!defaults.has_attribute?(a.name) || !defaults.value_for(a.name).nil?)}
    non_default_attr = attr.select{|a| !defaults.has_attribute?(a.name)}
  -%>

  public final void <%= defaults.factory_method_name == 'update' ? "update#{entity.name}" : defaults.factory_method_name %>( @javax.annotation.Nonnull final <%= entity.jpa.qualified_name %> $_<%= non_default_attr.empty? ? '' : ', ' %><%= non_default_attr.collect{|a| "#{annotated_type(a, :jpa, :default, :final => true)} #{Reality::Naming.camelize(a.name)}"}.join(', ') %> )
  {
    <%= Reality::Naming.camelize(entity.dao.jpa.dao_service_name) %>().update( $_<%= non_default_attr.empty? ? '' : ', ' %><%= non_default_attr.collect{|a| Reality::Naming.camelize(a.name)}.join(', ') %> );
  }
<% end -%>
<% entity.jpa.test_update_defaults.each do |defaults|
    attr = entity.attributes.select{|a| !a.immutable? && !a.generated_value? && a.jpa? && a.jpa.persistent? && (!defaults.has_attribute?(a.name) || !defaults.value_for(a.name).nil?)}
    non_default_attr = attr.select{|a| !defaults.has_attribute?(a.name)}
  -%>

  public final void <%= defaults.factory_method_name %>( @javax.annotation.Nonnull final <%= entity.jpa.qualified_name %> $_<%= non_default_attr.empty? ? '' : ', ' %><%= non_default_attr.collect{|a| "#{annotated_type(a, :jpa, :default, :final => true)} #{Reality::Naming.camelize(a.name)}"}.join(', ') %> )
  {
<% if defaults.force_refresh? -%>
    em().refresh( $_ );
<% end -%>
<% attr.each do |a| -%>
    $_.set<%= a.name %>( <%= defaults.has_attribute?(a.name) ? defaults.value_for(a.name) : Reality::Naming.camelize(a.name) %> );
<% end -%>
    <%= Reality::Naming.camelize(entity.dao.jpa.dao_service_name) %>().persist( $_ );
  }
<% end -%>

  public final void update<%= entity.name %>( @javax.annotation.Nonnull final <%= entity.jpa.qualified_name %> $_, <%= entity.attributes.select{|a| !a.immutable? && !a.generated_value? && a.jpa? && a.jpa.persistent?}.collect{|a| "#{annotated_type(a, :jpa, :default, :final => true)} #{Reality::Naming.camelize(a.name)}"}.join(', ') %>)
  {
    <%= Reality::Naming.camelize(entity.dao.jpa.dao_service_name) %>().update( $_, <%= entity.attributes.select{|a| !a.immutable? && !a.generated_value? && a.jpa? && a.jpa.persistent?}.collect{|a| Reality::Naming.camelize(a.name)}.join(', ') %> );
  }
<% end -%>

  public final void remove<%= entity.name %>( @javax.annotation.Nonnull final <%= entity.jpa.qualified_name %> entity )
  {
    <%= Reality::Naming.camelize(entity.dao.jpa.dao_service_name) %>().remove( entity );
  }
<% end -%>
<% end -%>
<% data_module.entities.select{|e|e.jpa?}.each do |entity| -%>

  @javax.annotation.Nonnull
  public final <%= entity.dao.jpa.qualified_dao_service_name %> <%= Reality::Naming.camelize(entity.dao.jpa.dao_service_name) %>()
  {
    return s( <%= entity.dao.jpa.qualified_dao_service_name %>.class );
  }
<% end -%>

  @javax.annotation.Nonnull
  protected final <T> T s( @javax.annotation.Nonnull final Class<T> type )
  {
    return _injector.getInstance( type );
  }

  @javax.annotation.Nonnull
  protected <T> T s( @javax.annotation.Nonnull final String name, @javax.annotation.Nonnull final Class<T> type )
  {
    return getInjector().getInstance( com.google.inject.Key.get( type, com.google.inject.name.Names.named( name ) ) );
  }

  @javax.annotation.Nonnull
  protected final com.google.inject.Injector getInjector()
  {
    return _injector;
  }
}
