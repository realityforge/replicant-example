/* DO NOT EDIT: File is auto-generated */
package <%= to_package(service.jaxrs.qualified_boundary_name) %>;

@javax.annotation.Generated( "Domgen" )
@java.lang.SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
@javax.enterprise.context.ApplicationScoped
@javax.transaction.Transactional( javax.transaction.Transactional.TxType.NEVER )
public class <%= service.jaxrs.boundary_name %>
<%= service.jaxrs.boundary_extends ? "  extends #{service.jaxrs.boundary_extends}\n" : '' -%>
  implements <%= service.jaxrs.qualified_service_name %>
{
  @javax.inject.Inject
  private <%= service.ejb.qualified_boundary_interface_name %> _service;
<% service.methods.select{|method| method.jaxrs?}.each do |method|
%>
  <%= annotated_type(method.return_value, :jaxrs, :boundary, :public => true) %> <%= Reality::Naming.camelize(method.name) %>(<%= method.parameters.collect{|p| "#{annotated_type(p, :jaxrs, :boundary, :final => true)} #{Reality::Naming.camelize(p.name)}" }.join(', ') %>)<%=
    exceptions = method.exceptions.collect{|e| e.ee.qualified_name}
    exceptions.empty? ? '' : "\n    throws #{exceptions.join(', ')}"
%>
  {
    <%= method.return_value.return_type != :void ? 'return ' : '' %>_service.<%= Reality::Naming.camelize(method.name) %>(<%= method.parameters.collect{|p| Reality::Naming.camelize(p.name) }.join(', ') %>);
  }
<% end %>}
