/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.jaxrs.qualified_abstract_application_name) %>;

@javax.annotation.Generated( "Domgen" )
@java.lang.SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
public abstract class <%= repository.jaxrs.abstract_application_name %>
  extends javax.ws.rs.core.Application
{
  public static final String APPLICATION_PATH = "/<%= repository.jaxrs.path %>";

  @java.lang.Override
  public java.util.Set<Class<?>> getClasses()
  {
    final java.util.Set<Class<?>> classes = new java.util.HashSet<>();
<% repository.data_modules.select{|d| d.jaxrs?}.collect {|d| d.services.select{|s| s.jaxrs?}.collect {|s| s.jaxrs.qualified_service_name }}.flatten.each do |service_name| -%>
    classes.add( <%= service_name %>.class );
<% end -%>
<% repository.data_modules.select{|d| d.jaxrs?}.collect {|d| d.exceptions.select{|e| e.jaxrs? && e.concrete?}.collect {|s| s.jaxrs.qualified_exception_mapper_name }}.flatten.each do |exception_mapper_name| -%>
    classes.add( <%= exception_mapper_name %>.class );
<% end -%>
<% repository.jaxrs.extensions.each do |extension| -%>
    classes.add( <%= extension %>.class );
<% end -%>
<% if repository.jackson? -%>
    classes.add( org.glassfish.jersey.jackson.JacksonFeature.class );
<% end -%>
    collectClasses( classes );
    return classes;
  }

  protected void collectClasses( @javax.annotation.Nonnull final java.util.Set<Class<?>> classes )
  {
  }
}
