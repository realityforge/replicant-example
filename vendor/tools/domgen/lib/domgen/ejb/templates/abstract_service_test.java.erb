/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.ejb.qualified_abstract_service_test_name) %>;

@java.lang.SuppressWarnings( { "UnusedDeclaration" } )
@javax.annotation.Generated( "Domgen" )
public abstract class <%= repository.ejb.abstract_service_test_name %>
  extends <%= repository.jpa? ? repository.jpa.qualified_base_entity_test_name : 'org.realityforge.guiceyloops.server.AbstractServerTest' %>
{
  @javax.annotation.Nullable
  protected com.google.inject.Module new<%= repository.name %>ServicesModule()
  {
    return new <%= repository.ejb.qualified_services_module_name %>( this );
  }

  @java.lang.Override
  protected com.google.inject.Module[] getModules()
  {
    final java.util.ArrayList<com.google.inject.Module> modules = new java.util.ArrayList<>();
    java.util.Collections.addAll( modules, super.getModules() );
<% repository.ejb.extra_test_modules.each do |test_module| -%>
    modules.add( new <%= test_module %>() );
<% end -%>
    addModule( modules, new<%= repository.name %>ServicesModule() );
<% if repository.ejb.include_server_test_module? -%>
    addModule( modules, new<%= repository.name %>ServerModule() );
<% end -%>
<% if repository.syncrecord? -%>
    addModule( modules, newSyncRecordServicesModule() );
<% end -%>
<% if repository.mail? -%>
    addModule( modules, newMailServicesModule() );
<% end -%>
    return modules.toArray( new com.google.inject.Module[ modules.size() ] );
  }
<% if repository.ejb.include_server_test_module? -%>

  @javax.annotation.Nullable
  protected com.google.inject.Module new<%= repository.name %>ServerModule()
  {
    return new <%= repository.ejb.qualified_server_test_module_name %>();
  }
<% end -%>
<% if repository.syncrecord? -%>

  @javax.annotation.Nullable
  protected com.google.inject.Module newSyncRecordServicesModule()
  {
    return new iris.syncrecord.server.test.util.SyncRecordServicesModule( this );
  }
<% end -%>
<% if repository.mail? -%>

  @java.lang.Override
  protected com.google.inject.Module getMailTestModule()
  {
    return new <%= repository.mail.qualified_test_module_name %>();
  }

  @javax.annotation.Nullable
  protected com.google.inject.Module newMailServicesModule()
  {
    return new iris.mail.server.test.util.MailServicesModule( this );
  }
<% end -%>
<% unless repository.jpa? -%>

  @Override
  public void flush()
  {
    //No default persistence unit so no need to flush
  }
<% end -%>
}
