/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.jws.qualified_fake_server_name) %>;

@edu.umd.cs.findbugs.annotations.SuppressFBWarnings({"NP_ALWAYS_NULL"})
@java.lang.SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
public class <%= repository.jws.fake_server_name %>
{
  private static final java.util.logging.Logger LOG = java.util.logging.Logger.getLogger( <%= repository.jws.fake_server_name %>.class.getName() );

  private static final int BASE_PORT = 2024;
  private static final int PORT_RANGE = 2000;

  private final String _hostAddress;
  private final int _port;

  public <%= repository.jws.fake_server_name %>()
    throws Exception
  {
    this( java.net.InetAddress.getLocalHost().getHostAddress(), randomPort() );
  }

  private static int randomPort()
  {
    return BASE_PORT + new java.util.Random().nextInt( PORT_RANGE );
  }

  public <%= repository.jws.fake_server_name %>( @javax.annotation.Nonnull final String hostAddress, @javax.annotation.Nonnegative final int port )
  {
    _hostAddress = hostAddress;
    _port = port;
  }

<%
  repository.data_modules.select{|dm| dm.jws?}.each do |data_module|
    data_module.services.select{|s| s.jws?}.each do |service|
%>
  @javax.annotation.Nonnull
  private final <%= service.jws.qualified_fake_implementation_name %> _<%= data_module.name %>_<%= service.name %> = new <%= service.jws.qualified_fake_implementation_name %>();
  @javax.annotation.Nullable
  private javax.xml.ws.Endpoint _<%= data_module.name %>_<%= service.name %>Endpoint;

  public void set<%= "#{data_module.name.to_s == repository.name.to_s ? '' : data_module.name}#{service.name}" %>( @javax.annotation.Nonnull final <%= service.jws.qualified_java_service_name %> service )
  {
    _<%= data_module.name %>_<%= service.name %>.setDelegate( service );
  }

  public String get<%= "#{data_module.name.to_s == repository.name.to_s ? '' : data_module.name}#{service.name}" %>WsdlAddress()
  {
    return getServiceWsdlAddress( <%= service.jws.qualified_java_service_name %>.class );
  }

  public String get<%= "#{data_module.name.to_s == repository.name.to_s ? '' : data_module.name}#{service.name}" %>Address()
  {
    return getServiceAddress( <%= service.jws.qualified_java_service_name %>.class );
  }
<%
    end
  end
%>

  public void start()
  {
    boolean success = false;
    try
    {
<%
  repository.data_modules.select{|dm| dm.jws?}.each do |data_module|
    data_module.services.select{|s| s.jws?}.each do |service|
%>
      {
        final String address = get<%= "#{data_module.name.to_s == repository.name.to_s ? '' : data_module.name}#{service.name}" %>Address();
        LOG.info( "Publishing <%= service.qualified_name %> to: " + address );
        _<%= data_module.name %>_<%= service.name %>Endpoint = javax.xml.ws.Endpoint.publish( address, _<%= data_module.name %>_<%= service.name %> );
      }
<%
    end
  end
%>
      success = true;
    }
    finally
    {
      if ( !success )
      {
        stop();
      }
    }
  }

  public void stop()
  {
<%
  repository.data_modules.select{|dm| dm.jws?}.each do |data_module|
    data_module.services.select{|s| s.jws?}.each do |service|
%>
      {
        if ( null != _<%= data_module.name %>_<%= service.name %>Endpoint )
        {
          _<%= data_module.name %>_<%= service.name %>Endpoint.stop();
          _<%= data_module.name %>_<%= service.name %>Endpoint = null;
        }
      }
<%
    end
  end
%>
  }

  private String getServiceWsdlAddress( final Class type )
  {
    return getServiceAddress( type ) + "?WSDL";
  }

  private String getServiceAddress( final Class type )
  {
    return "http://" + _hostAddress + ":" + _port + "/" + type.getCanonicalName();
  }

  @java.lang.SuppressWarnings( "PMD.SystemPrintln" )
  public static void main( final String[] args )
    throws Exception
  {
    final <%= repository.jws.fake_server_name %> server = new <%= repository.jws.fake_server_name %>();
    server.start();
    System.out.println("Press enter to terminate service.");
    System.in.read();
    server.stop();
  }
}
